---
# Check if Cursor is already installed
- name: Check if Cursor AppImage exists
  stat:
    path: "{{ cursor_appimage_dest }}"
  register: cursor_appimage_check
  tags:
    - applications
    - cursor

- name: Check if Cursor is in PATH
  stat:
    path: "{{ bin_dir | default('/usr/local/bin') }}/cursor"
  register: cursor_in_path
  tags:
    - applications
    - cursor

# Install Cursor AppImage
- name: Create directory for AppImages
  file:
    path: "{{ appimages_dir }}"
    state: directory
    mode: '0755'
  when: not cursor_appimage_check.stat.exists or not cursor_in_path.stat.exists
  tags:
    - applications
    - cursor

- name: Download Cursor AppImage
  get_url:
    url: "{{ cursor_appimage_url }}"
    dest: "{{ cursor_appimage_dest }}"
    mode: '0755'
  when: not cursor_appimage_check.stat.exists
  tags:
    - applications
    - cursor

- name: Create temporary directory for AppImage extraction
  file:
    path: /tmp/cursor-extract
    state: directory
    mode: '0755'
  when: not cursor_appimage_check.stat.exists
  tags:
    - applications
    - cursor

- name: Extract AppImage to get icon
  command: "{{ cursor_appimage_dest }} --appimage-extract"
  args:
    chdir: /tmp/cursor-extract
    creates: /tmp/cursor-extract/squashfs-root
  when: not cursor_appimage_check.stat.exists
  tags:
    - applications
    - cursor

- name: Find icon file
  find:
    paths: /tmp/cursor-extract/squashfs-root
    patterns: "*.png,*.svg,*.ico"
    recurse: yes
  register: icon_files
  when: not cursor_appimage_check.stat.exists
  tags:
    - applications
    - cursor

- name: Create icons directory if it doesn't exist
  file:
    path: "{{ cursor_icon_dest | dirname }}"
    state: directory
    mode: '0755'
  when: not cursor_appimage_check.stat.exists
  tags:
    - applications
    - cursor

- name: Copy icon to system icons directory
  copy:
    src: "{{ icon_files.files[0].path }}"
    dest: "{{ cursor_icon_dest }}"
    mode: '0644'
    remote_src: yes
  when: not cursor_appimage_check.stat.exists and icon_files.files | length > 0
  tags:
    - applications
    - cursor

- name: Create desktop entry for Cursor
  template:
    src: cursor.desktop.j2
    dest: "{{ cursor_desktop_entry_dest }}"
    mode: '0644'
  when: not cursor_appimage_check.stat.exists
  tags:
    - applications
    - cursor

# Add Cursor to PATH
- name: Create bin directory if it doesn't exist
  file:
    path: "{{ bin_dir | default('/usr/local/bin') }}"
    state: directory
    mode: '0755'
  become: true
  when: not cursor_in_path.stat.exists
  tags:
    - applications
    - cursor

- name: Create symbolic link to Cursor in PATH
  file:
    src: "{{ cursor_appimage_dest }}"
    dest: "{{ bin_dir | default('/usr/local/bin') }}/cursor"
    state: link
  become: true
  when: not cursor_in_path.stat.exists
  tags:
    - applications
    - cursor

- name: Clean up temporary extraction directory
  file:
    path: /tmp/cursor-extract
    state: absent
  when: not cursor_appimage_check.stat.exists
  tags:
    - applications
    - cursor

# Install Discord from Flathub
- name: Check if Flathub is enabled
  command: flatpak remotes --columns=name
  register: flatpak_remotes
  changed_when: false
  tags:
    - applications
    - discord

- name: Enable Flathub if not already enabled
  command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  when: "'flathub' not in flatpak_remotes.stdout"
  tags:
    - applications
    - discord

- name: Check if Discord is already installed
  command: flatpak list --app --columns=application
  register: installed_flatpaks
  changed_when: false
  tags:
    - applications
    - discord

- name: Install Discord from Flathub
  command: flatpak install -y flathub {{ discord_flatpak_app_id }}
  when: "discord_flatpak_app_id not in installed_flatpaks.stdout"
  tags:
    - applications
    - discord

# Install VLC from Flathub
- name: Check if VLC is already installed
  command: flatpak list --app --columns=application
  register: installed_flatpaks_vlc
  changed_when: false
  tags:
    - applications
    - vlc

- name: Install VLC from Flathub
  command: flatpak install -y flathub {{ vlc_flatpak_app_id }}
  when: "vlc_flatpak_app_id not in installed_flatpaks_vlc.stdout"
  tags:
    - applications
    - vlc 