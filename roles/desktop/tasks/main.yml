---
# Check if gnome-tweaks is already installed
- name: Check if gnome-tweaks is installed
  command: rpm -q gnome-tweaks
  register: gnome_tweaks_check
  changed_when: false
  failed_when: false
  check_mode: no
  tags:
    - desktop
    - themes

# Install themes and icons
- name: Install gnome-tweaks
  dnf:
    name:
      - gnome-tweaks
    state: present
  when: gnome_tweaks_check.rc != 0
  tags:
    - desktop
    - themes

# Check if GNOME extensions are already installed
- name: Check installed GNOME extensions
  command: rpm -q gnome-shell-extension-appindicator gnome-shell-extension-dash-to-dock gnome-extensions-app
  register: gnome_extensions_check
  changed_when: false
  failed_when: false
  check_mode: no
  tags:
    - desktop
    - gnome-extensions

# Install GNOME extensions
- name: Install GNOME extensions
  dnf:
    name:
      - gnome-shell-extension-appindicator
      - gnome-shell-extension-dash-to-dock
      - gnome-extensions-app
    state: present
  when: gnome_extensions_check.rc != 0
  tags:
    - desktop
    - gnome-extensions

# Verify if Flatpak is installed
- name: Check if Flatpak is installed
  command: which flatpak
  register: flatpak_check
  changed_when: false
  failed_when: false
  check_mode: no
  tags:
    - desktop
    - browser

# Install Flatpak
- name: Ensure Flatpak is installed
  dnf:
    name: flatpak
    state: present
  become: yes
  when: flatpak_check.rc != 0
  tags:
    - desktop
    - browser

# Check if Flathub repository is already added
- name: Check if Flathub repository is added
  command: flatpak remote-list
  register: flathub_check
  changed_when: false
  check_mode: no
  tags:
    - desktop
    - browser

- name: Add Flathub repository
  command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  become: yes
  when: "'flathub' not in flathub_check.stdout"
  tags:
    - desktop
    - browser

# Check if Thunderbird is already installed
- name: Check if Thunderbird is installed
  command: rpm -q thunderbird
  register: thunderbird_check
  changed_when: false
  failed_when: false
  check_mode: no
  tags:
    - desktop
    - email
    - thunderbird

# Install Thunderbird
- name: Install Thunderbird email client
  dnf:
    name: thunderbird
    state: present
  when: thunderbird_check.rc != 0
  tags:
    - desktop
    - email
    - thunderbird

# Check if GNOME Remote Desktop packages are installed
- name: Check if GNOME Remote Desktop is installed
  command: rpm -q gnome-remote-desktop
  register: remote_desktop_check
  changed_when: false
  failed_when: false
  check_mode: no
  tags:
    - desktop
    - remote-desktop

# Install GNOME Remote Desktop
- name: Install GNOME Remote Desktop
  dnf:
    name:
      - gnome-remote-desktop
    state: present
  when: remote_desktop_check.rc != 0
  tags:
    - desktop
    - remote-desktop

# Install psutil Python module required for dconf
- name: Install Python psutil module
  become: yes
  package:
    name: python3-psutil
    state: present
  tags:
    - desktop
    - remote-desktop

# Enable GNOME Remote Desktop service for the user
- name: Enable GNOME Remote Desktop service for user
  systemd:
    name: gnome-remote-desktop.service
    scope: user
    state: started
    enabled: yes
  become: no
  tags:
    - desktop
    - remote-desktop

# Configure GNOME Remote Desktop RDP settings
- name: Configure GNOME Remote Desktop RDP settings
  dconf:
    key: "/org/gnome/desktop/remote-desktop/rdp/{{ item.key }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { key: 'enable', value: 'true' }
    - { key: 'tls-cert', value: "'{{ ansible_user_dir }}/.local/share/gnome-remote-desktop/rdp-tls.crt'" }
    - { key: 'tls-key', value: "'{{ ansible_user_dir }}/.local/share/gnome-remote-desktop/rdp-tls.key'" }
    - { key: 'view-only', value: 'false' }
  become: no
  tags:
    - desktop
    - remote-desktop

# Generate RDP certificate if it doesn't exist
- name: Check if RDP certificate exists
  stat:
    path: "{{ ansible_user_dir }}/.local/share/gnome-remote-desktop/rdp-tls.crt"
  register: rdp_cert
  tags:
    - desktop
    - remote-desktop

- name: Create gnome-remote-desktop directory if it doesn't exist
  file:
    path: "{{ ansible_user_dir }}/.local/share/gnome-remote-desktop"
    state: directory
    mode: '0700'
  when: not rdp_cert.stat.exists
  tags:
    - desktop
    - remote-desktop

# Ensure openssl is installed
- name: Install openssl
  become: yes
  package:
    name: openssl
    state: present
  when: not rdp_cert.stat.exists
  tags:
    - desktop
    - remote-desktop

- name: Generate RDP certificate and key
  shell: cd {{ ansible_user_dir }}/.local/share/gnome-remote-desktop && openssl req -new -x509 -days 3650 -nodes -out rdp-tls.crt -keyout rdp-tls.key -subj "/CN={{ ansible_hostname }}"
  when: not rdp_cert.stat.exists
  tags:
    - desktop
    - remote-desktop

# Set proper permissions on TLS files
- name: Set permissions on TLS cert and key
  file:
    path: "{{ item }}"
    mode: '0600'
  loop:
    - "{{ ansible_user_dir }}/.local/share/gnome-remote-desktop/rdp-tls.crt"
    - "{{ ansible_user_dir }}/.local/share/gnome-remote-desktop/rdp-tls.key"
  when: not rdp_cert.stat.exists
  tags:
    - desktop
    - remote-desktop

# Configure firewall for RDP
- name: Allow RDP through the firewall
  firewalld:
    service: rdp
    permanent: true
    state: enabled
    immediate: yes
  become: yes
  tags:
    - desktop
    - remote-desktop
    - firewall